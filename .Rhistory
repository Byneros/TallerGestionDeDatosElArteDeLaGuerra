start_index <- indices_estrategias[i]
end_index <- ifelse(i < length(indices_estrategias), indices_estrategias[i + 1] - 1, length(texto_unido))
parrafo <- paste(texto_unido[start_index:end_index], collapse=" ")
# Resaltar la palabra "estrategia" en azul
parrafo_resaltado <- gsub("estrategia", crayon::blue("estrategia"), parrafo, ignore.case = TRUE)
cat(i, ". ", parrafo_resaltado, "\n\n")
}
library(tm)
library(stringr)
#Mirar cual es el folder de trabajo actual y asegurarse que en el est? el documento de la obra
getwd()
#Lee el texto desde el archivo "El Arte De La Guerra Sun Tzu.txt" y lo coloca en un vector
text.v <- scan("El Arte De La Guerra Sun Tzu.txt", what="character", sep="\n")
# Guarda lal?nea del texto en donde inicia la obra en start.v
start.v <- which(text.v == "/CAPITULO I")
start.v
# Guarda la linea del texto en donde finaliza la obra en start.v
end.v <- which(text.v == "FIN")
end.v
start.metadata.v <- text.v[1:start.v -1]
start.metadata.v
# El metadato del final de la obra inicia en la l?nea (end.v+1) y finaliza en la ?ltima de la obra
end.metadata.v <- text.v[(end.v+1):length(text.v)]
end.metadata.v
# Colocamos todo el metadato de la obra en la variable (metadata.v)
metadata.v <- c(start.metadata.v, end.metadata.v)
metadata.v
# Ahora, las lineas de la novela son las que se encuentra entre la l?nea de inicio (start.v) y la de fin de la obra (end.v)
# Colocaremos est?s l?neas en la variable (novel.lines.v)
novel.lines.v <-  text.v[start.v:end.v]
novel.lines.v
class(novel.lines.v)
texto_unido <- novel.lines.v
texto_unido <- gsub("[[:punct:]]", " ", texto_unido)
# Convertir todas las palabras a minúsculas
texto_unido <- tolower(texto_unido)
# Eliminar puntuación y caracteres especiales
texto_unido <- gsub("[[:punct:]]", " ", texto_unido)
# Crear un Corpus de texto
corpus <- Corpus(VectorSource(texto_unido))
# Preprocesamiento del texto
corpus <- tm_map(corpus, removeNumbers)
corpus <- tm_map(corpus, removeWords, stopwords("spanish"))  # Puedes cambiar "spanish" al idioma adecuado
corpus <- tm_map(corpus, stripWhitespace)
# Convertir el Corpus a una matriz de términos de documentos (DTM)
dtm <- DocumentTermMatrix(corpus)
# Buscar frases que mencionen estrategias militares
expresion_regular_estrategias <- "([^.!?]*conocer[^.!?]*)"
frases_estrategias <- str_extract_all(texto_unido, expresion_regular_estrategias)
# Filtrar las frases que mencionen estrategias militares
estrategias_militares <- unlist(frases_estrategias)
# Eliminar frases duplicadas (opcional)
estrategias_militares <- unique(estrategias_militares)
# Instalar y cargar la librería 'crayon' si no está instalada
if (!requireNamespace("crayon", quietly = TRUE)) {
install.packages("crayon")
}
library(crayon)
# Obtener el índice de los párrafos que contienen la palabra "estrategia"
indices_estrategias <- grep(expresion_regular_estrategias, texto_unido)
# Imprimir cada párrafo que contiene la palabra "estrategia" resaltada en azul
cat("Párrafos que mencionan 'estrategia':\n")
for (i in seq_along(indices_estrategias)) {
start_index <- indices_estrategias[i]
end_index <- ifelse(i < length(indices_estrategias), indices_estrategias[i + 1] - 1, length(texto_unido))
parrafo <- paste(texto_unido[start_index:end_index], collapse=" ")
# Resaltar la palabra "estrategia" en azul
parrafo_resaltado <- gsub("estrategia", crayon::blue("estrategia"), parrafo, ignore.case = TRUE)
cat(i, ". ", parrafo_resaltado, "\n\n")
}
library(tm)
library(stringr)
#Mirar cual es el folder de trabajo actual y asegurarse que en el est? el documento de la obra
getwd()
#Lee el texto desde el archivo "El Arte De La Guerra Sun Tzu.txt" y lo coloca en un vector
text.v <- scan("El Arte De La Guerra Sun Tzu.txt", what="character", sep="\n")
# Guarda lal?nea del texto en donde inicia la obra en start.v
start.v <- which(text.v == "/CAPITULO I")
start.v
# Guarda la linea del texto en donde finaliza la obra en start.v
end.v <- which(text.v == "FIN")
end.v
start.metadata.v <- text.v[1:start.v -1]
start.metadata.v
# El metadato del final de la obra inicia en la l?nea (end.v+1) y finaliza en la ?ltima de la obra
end.metadata.v <- text.v[(end.v+1):length(text.v)]
end.metadata.v
# Colocamos todo el metadato de la obra en la variable (metadata.v)
metadata.v <- c(start.metadata.v, end.metadata.v)
metadata.v
# Ahora, las lineas de la novela son las que se encuentra entre la l?nea de inicio (start.v) y la de fin de la obra (end.v)
# Colocaremos est?s l?neas en la variable (novel.lines.v)
novel.lines.v <-  text.v[start.v:end.v]
novel.lines.v
class(novel.lines.v)
texto_unido <- novel.lines.v
texto_unido <- gsub("[[:punct:]]", " ", texto_unido)
# Convertir todas las palabras a minúsculas
texto_unido <- tolower(texto_unido)
# Eliminar puntuación y caracteres especiales
texto_unido <- gsub("[[:punct:]]", " ", texto_unido)
# Crear un Corpus de texto
corpus <- Corpus(VectorSource(texto_unido))
# Preprocesamiento del texto
corpus <- tm_map(corpus, removeNumbers)
corpus <- tm_map(corpus, removeWords, stopwords("spanish"))  # Puedes cambiar "spanish" al idioma adecuado
corpus <- tm_map(corpus, stripWhitespace)
# Convertir el Corpus a una matriz de términos de documentos (DTM)
dtm <- DocumentTermMatrix(corpus)
# Buscar frases que mencionen estrategias militares
expresion_regular_estrategias <- "([^.!?]*conocer[^.!?]*)"
frases_estrategias <- str_extract_all(texto_unido, expresion_regular_estrategias)
# Filtrar las frases que mencionen estrategias militares
estrategias_militares <- unlist(frases_estrategias)
# Eliminar frases duplicadas (opcional)
estrategias_militares <- unique(estrategias_militares)
# Instalar y cargar la librería 'crayon' si no está instalada
if (!requireNamespace("crayon", quietly = TRUE)) {
install.packages("crayon")
}
library(crayon)
# Obtener el índice de los párrafos que contienen la palabra "estrategia"
indices_estrategias <- grep(expresion_regular_estrategias, texto_unido)
# Imprimir cada párrafo que contiene la palabra "estrategia" resaltada en azul
cat("Párrafos que mencionan 'estrategia':\n")
for (i in seq_along(indices_estrategias)) {
start_index <- indices_estrategias[i]
end_index <- ifelse(i < length(indices_estrategias), indices_estrategias[i + 1] - 1, length(texto_unido))
parrafo <- paste(texto_unido[start_index:end_index], collapse=" ")
# Resaltar la palabra "estrategia" en azul
parrafo_resaltado <- gsub("conocer", crayon::blue("conocer"), parrafo, ignore.case = TRUE)
cat(i, ". ", parrafo_resaltado, "\n\n")
}
library(tm)
library(stringr)
#Mirar cual es el folder de trabajo actual y asegurarse que en el est? el documento de la obra
getwd()
#Lee el texto desde el archivo "El Arte De La Guerra Sun Tzu.txt" y lo coloca en un vector
text.v <- scan("El Arte De La Guerra Sun Tzu.txt", what="character", sep="\n")
# Guarda lal?nea del texto en donde inicia la obra en start.v
start.v <- which(text.v == "/CAPITULO I")
start.v
# Guarda la linea del texto en donde finaliza la obra en start.v
end.v <- which(text.v == "FIN")
end.v
start.metadata.v <- text.v[1:start.v -1]
start.metadata.v
# El metadato del final de la obra inicia en la l?nea (end.v+1) y finaliza en la ?ltima de la obra
end.metadata.v <- text.v[(end.v+1):length(text.v)]
end.metadata.v
# Colocamos todo el metadato de la obra en la variable (metadata.v)
metadata.v <- c(start.metadata.v, end.metadata.v)
metadata.v
# Ahora, las lineas de la novela son las que se encuentra entre la l?nea de inicio (start.v) y la de fin de la obra (end.v)
# Colocaremos est?s l?neas en la variable (novel.lines.v)
novel.lines.v <-  text.v[start.v:end.v]
novel.lines.v
class(novel.lines.v)
texto_unido <- novel.lines.v
#texto_unido <- gsub("[[:punct:]]", " ", texto_unido)
# Convertir todas las palabras a minúsculas
texto_unido <- tolower(texto_unido)
# Eliminar puntuación y caracteres especiales
texto_unido <- gsub("[[:punct:]]", " ", texto_unido)
# Crear un Corpus de texto
corpus <- Corpus(VectorSource(texto_unido))
# Preprocesamiento del texto
corpus <- tm_map(corpus, removeNumbers)
corpus <- tm_map(corpus, removeWords, stopwords("spanish"))  # Puedes cambiar "spanish" al idioma adecuado
corpus <- tm_map(corpus, stripWhitespace)
# Convertir el Corpus a una matriz de términos de documentos (DTM)
dtm <- DocumentTermMatrix(corpus)
# Buscar frases que mencionen estrategias militares
expresion_regular_estrategias <- "([^.!?]*conocer[^.!?]*)"
frases_estrategias <- str_extract_all(texto_unido, expresion_regular_estrategias)
# Filtrar las frases que mencionen estrategias militares
estrategias_militares <- unlist(frases_estrategias)
# Eliminar frases duplicadas (opcional)
estrategias_militares <- unique(estrategias_militares)
# Instalar y cargar la librería 'crayon' si no está instalada
if (!requireNamespace("crayon", quietly = TRUE)) {
install.packages("crayon")
}
library(crayon)
# Obtener el índice de los párrafos que contienen la palabra "estrategia"
indices_estrategias <- grep(expresion_regular_estrategias, texto_unido)
# Imprimir cada párrafo que contiene la palabra "estrategia" resaltada en azul
cat("Párrafos que mencionan 'estrategia':\n")
for (i in seq_along(indices_estrategias)) {
start_index <- indices_estrategias[i]
end_index <- ifelse(i < length(indices_estrategias), indices_estrategias[i + 1] - 1, length(texto_unido))
parrafo <- paste(texto_unido[start_index:end_index], collapse=" ")
# Resaltar la palabra "estrategia" en azul
parrafo_resaltado <- gsub("conocer", crayon::blue("conocer"), parrafo, ignore.case = TRUE)
cat(i, ". ", parrafo_resaltado, "\n\n")
}
library(tm)
library(stringr)
#Mirar cual es el folder de trabajo actual y asegurarse que en el est? el documento de la obra
getwd()
#Lee el texto desde el archivo "El Arte De La Guerra Sun Tzu.txt" y lo coloca en un vector
text.v <- scan("El Arte De La Guerra Sun Tzu.txt", what="character", sep="\n")
# Guarda lal?nea del texto en donde inicia la obra en start.v
start.v <- which(text.v == "/CAPITULO I")
start.v
# Guarda la linea del texto en donde finaliza la obra en start.v
end.v <- which(text.v == "FIN")
end.v
start.metadata.v <- text.v[1:start.v -1]
start.metadata.v
# El metadato del final de la obra inicia en la l?nea (end.v+1) y finaliza en la ?ltima de la obra
end.metadata.v <- text.v[(end.v+1):length(text.v)]
end.metadata.v
# Colocamos todo el metadato de la obra en la variable (metadata.v)
metadata.v <- c(start.metadata.v, end.metadata.v)
metadata.v
# Ahora, las lineas de la novela son las que se encuentra entre la l?nea de inicio (start.v) y la de fin de la obra (end.v)
# Colocaremos est?s l?neas en la variable (novel.lines.v)
novel.lines.v <-  text.v[start.v:end.v]
novel.lines.v
class(novel.lines.v)
texto_unido <- novel.lines.v
#texto_unido <- gsub("[[:punct:]]", " ", texto_unido)
# Convertir todas las palabras a minúsculas
texto_unido <- tolower(texto_unido)
# Eliminar puntuación y caracteres especiales
texto_unido <- gsub("[[:punct:]]", " ", texto_unido)
# Crear un Corpus de texto
corpus <- Corpus(VectorSource(texto_unido))
# Preprocesamiento del texto
corpus <- tm_map(corpus, removeNumbers)
corpus <- tm_map(corpus, removeWords, stopwords("spanish"))  # Puedes cambiar "spanish" al idioma adecuado
corpus <- tm_map(corpus, stripWhitespace)
# Convertir el Corpus a una matriz de términos de documentos (DTM)
dtm <- DocumentTermMatrix(corpus)
# Buscar frases que mencionen estrategias militares
expresion_regular_estrategias <- "([^.!?]*conocer&estrategia[^.!?]*)"
frases_estrategias <- str_extract_all(texto_unido, expresion_regular_estrategias)
# Filtrar las frases que mencionen estrategias militares
estrategias_militares <- unlist(frases_estrategias)
# Eliminar frases duplicadas (opcional)
estrategias_militares <- unique(estrategias_militares)
# Instalar y cargar la librería 'crayon' si no está instalada
if (!requireNamespace("crayon", quietly = TRUE)) {
install.packages("crayon")
}
library(crayon)
# Obtener el índice de los párrafos que contienen la palabra "estrategia"
indices_estrategias <- grep(expresion_regular_estrategias, texto_unido)
# Imprimir cada párrafo que contiene la palabra "estrategia" resaltada en azul
cat("Párrafos que mencionan 'estrategia':\n")
for (i in seq_along(indices_estrategias)) {
start_index <- indices_estrategias[i]
end_index <- ifelse(i < length(indices_estrategias), indices_estrategias[i + 1] - 1, length(texto_unido))
parrafo <- paste(texto_unido[start_index:end_index], collapse=" ")
# Resaltar la palabra "estrategia" en azul
parrafo_resaltado <- gsub("conocer", crayon::blue("conocer"), parrafo, ignore.case = TRUE)
cat(i, ". ", parrafo_resaltado, "\n\n")
}
library(tm)
library(stringr)
#Mirar cual es el folder de trabajo actual y asegurarse que en el est? el documento de la obra
getwd()
#Lee el texto desde el archivo "El Arte De La Guerra Sun Tzu.txt" y lo coloca en un vector
text.v <- scan("El Arte De La Guerra Sun Tzu.txt", what="character", sep="\n")
# Guarda lal?nea del texto en donde inicia la obra en start.v
start.v <- which(text.v == "/CAPITULO I")
start.v
# Guarda la linea del texto en donde finaliza la obra en start.v
end.v <- which(text.v == "FIN")
end.v
start.metadata.v <- text.v[1:start.v -1]
start.metadata.v
# El metadato del final de la obra inicia en la l?nea (end.v+1) y finaliza en la ?ltima de la obra
end.metadata.v <- text.v[(end.v+1):length(text.v)]
end.metadata.v
# Colocamos todo el metadato de la obra en la variable (metadata.v)
metadata.v <- c(start.metadata.v, end.metadata.v)
metadata.v
# Ahora, las lineas de la novela son las que se encuentra entre la l?nea de inicio (start.v) y la de fin de la obra (end.v)
# Colocaremos est?s l?neas en la variable (novel.lines.v)
novel.lines.v <-  text.v[start.v:end.v]
novel.lines.v
class(novel.lines.v)
texto_unido <- novel.lines.v
#texto_unido <- gsub("[[:punct:]]", " ", texto_unido)
# Convertir todas las palabras a minúsculas
texto_unido <- tolower(texto_unido)
# Eliminar puntuación y caracteres especiales
texto_unido <- gsub("[[:punct:]]", " ", texto_unido)
# Crear un Corpus de texto
corpus <- Corpus(VectorSource(texto_unido))
# Preprocesamiento del texto
corpus <- tm_map(corpus, removeNumbers)
corpus <- tm_map(corpus, removeWords, stopwords("spanish"))  # Puedes cambiar "spanish" al idioma adecuado
corpus <- tm_map(corpus, stripWhitespace)
# Convertir el Corpus a una matriz de términos de documentos (DTM)
dtm <- DocumentTermMatrix(corpus)
# Buscar frases que mencionen estrategias militares
expresion_regular_estrategias <- "([^.!?]*conocer|estrategia[^.!?]*)"
frases_estrategias <- str_extract_all(texto_unido, expresion_regular_estrategias)
# Filtrar las frases que mencionen estrategias militares
estrategias_militares <- unlist(frases_estrategias)
# Eliminar frases duplicadas (opcional)
estrategias_militares <- unique(estrategias_militares)
# Instalar y cargar la librería 'crayon' si no está instalada
if (!requireNamespace("crayon", quietly = TRUE)) {
install.packages("crayon")
}
library(crayon)
# Obtener el índice de los párrafos que contienen la palabra "estrategia"
indices_estrategias <- grep(expresion_regular_estrategias, texto_unido)
# Imprimir cada párrafo que contiene la palabra "estrategia" resaltada en azul
cat("Párrafos que mencionan 'estrategia':\n")
for (i in seq_along(indices_estrategias)) {
start_index <- indices_estrategias[i]
end_index <- ifelse(i < length(indices_estrategias), indices_estrategias[i + 1] - 1, length(texto_unido))
parrafo <- paste(texto_unido[start_index:end_index], collapse=" ")
# Resaltar la palabra "estrategia" en azul
parrafo_resaltado <- gsub("conocer", crayon::blue("conocer"), parrafo, ignore.case = TRUE)
cat(i, ". ", parrafo_resaltado, "\n\n")
}
# Buscar frases que mencionen estrategias militares
expresion_regular_estrategias <- "([^.!?]*conocer|enemigo[^.!?]*)"
library(tm)
library(stringr)
#Mirar cual es el folder de trabajo actual y asegurarse que en el est? el documento de la obra
getwd()
#Lee el texto desde el archivo "El Arte De La Guerra Sun Tzu.txt" y lo coloca en un vector
text.v <- scan("El Arte De La Guerra Sun Tzu.txt", what="character", sep="\n")
# Guarda lal?nea del texto en donde inicia la obra en start.v
start.v <- which(text.v == "/CAPITULO I")
start.v
# Guarda la linea del texto en donde finaliza la obra en start.v
end.v <- which(text.v == "FIN")
end.v
start.metadata.v <- text.v[1:start.v -1]
start.metadata.v
# El metadato del final de la obra inicia en la l?nea (end.v+1) y finaliza en la ?ltima de la obra
end.metadata.v <- text.v[(end.v+1):length(text.v)]
end.metadata.v
# Colocamos todo el metadato de la obra en la variable (metadata.v)
metadata.v <- c(start.metadata.v, end.metadata.v)
metadata.v
# Ahora, las lineas de la novela son las que se encuentra entre la l?nea de inicio (start.v) y la de fin de la obra (end.v)
# Colocaremos est?s l?neas en la variable (novel.lines.v)
novel.lines.v <-  text.v[start.v:end.v]
novel.lines.v
class(novel.lines.v)
texto_unido <- novel.lines.v
#texto_unido <- gsub("[[:punct:]]", " ", texto_unido)
# Convertir todas las palabras a minúsculas
texto_unido <- tolower(texto_unido)
# Eliminar puntuación y caracteres especiales
texto_unido <- gsub("[[:punct:]]", " ", texto_unido)
# Crear un Corpus de texto
corpus <- Corpus(VectorSource(texto_unido))
# Preprocesamiento del texto
corpus <- tm_map(corpus, removeNumbers)
corpus <- tm_map(corpus, removeWords, stopwords("spanish"))  # Puedes cambiar "spanish" al idioma adecuado
corpus <- tm_map(corpus, stripWhitespace)
# Convertir el Corpus a una matriz de términos de documentos (DTM)
dtm <- DocumentTermMatrix(corpus)
# Buscar frases que mencionen estrategias militares
expresion_regular_estrategias <- "([^.!?]*conocer|enemigo[^.!?]*)"
frases_estrategias <- str_extract_all(texto_unido, expresion_regular_estrategias)
# Filtrar las frases que mencionen estrategias militares
estrategias_militares <- unlist(frases_estrategias)
# Eliminar frases duplicadas (opcional)
estrategias_militares <- unique(estrategias_militares)
# Instalar y cargar la librería 'crayon' si no está instalada
if (!requireNamespace("crayon", quietly = TRUE)) {
install.packages("crayon")
}
library(crayon)
# Obtener el índice de los párrafos que contienen la palabra "estrategia"
indices_estrategias <- grep(expresion_regular_estrategias, texto_unido)
# Imprimir cada párrafo que contiene la palabra "estrategia" resaltada en azul
cat("Párrafos que mencionan 'estrategia':\n")
for (i in seq_along(indices_estrategias)) {
start_index <- indices_estrategias[i]
end_index <- ifelse(i < length(indices_estrategias), indices_estrategias[i + 1] - 1, length(texto_unido))
parrafo <- paste(texto_unido[start_index:end_index], collapse=" ")
# Resaltar la palabra "estrategia" en azul
parrafo_resaltado <- gsub("conocer", crayon::blue("conocer"), parrafo, ignore.case = TRUE)
cat(i, ". ", parrafo_resaltado, "\n\n")
}
library(tm)
library(stringr)
#Mirar cual es el folder de trabajo actual y asegurarse que en el est? el documento de la obra
getwd()
#Lee el texto desde el archivo "El Arte De La Guerra Sun Tzu.txt" y lo coloca en un vector
text.v <- scan("El Arte De La Guerra Sun Tzu.txt", what="character", sep="\n")
# Guarda lal?nea del texto en donde inicia la obra en start.v
start.v <- which(text.v == "/CAPITULO I")
start.v
# Guarda la linea del texto en donde finaliza la obra en start.v
end.v <- which(text.v == "FIN")
end.v
start.metadata.v <- text.v[1:start.v -1]
start.metadata.v
# El metadato del final de la obra inicia en la l?nea (end.v+1) y finaliza en la ?ltima de la obra
end.metadata.v <- text.v[(end.v+1):length(text.v)]
end.metadata.v
# Colocamos todo el metadato de la obra en la variable (metadata.v)
metadata.v <- c(start.metadata.v, end.metadata.v)
metadata.v
# Ahora, las lineas de la novela son las que se encuentra entre la l?nea de inicio (start.v) y la de fin de la obra (end.v)
# Colocaremos est?s l?neas en la variable (novel.lines.v)
novel.lines.v <-  text.v[start.v:end.v]
novel.lines.v
class(novel.lines.v)
texto_unido <- novel.lines.v
#texto_unido <- gsub("[[:punct:]]", " ", texto_unido)
# Convertir todas las palabras a minúsculas
texto_unido <- tolower(texto_unido)
# Eliminar puntuación y caracteres especiales
texto_unido <- gsub("[[:punct:]]", " ", texto_unido)
# Crear un Corpus de texto
corpus <- Corpus(VectorSource(texto_unido))
# Preprocesamiento del texto
corpus <- tm_map(corpus, removeNumbers)
corpus <- tm_map(corpus, removeWords, stopwords("spanish"))  # Puedes cambiar "spanish" al idioma adecuado
corpus <- tm_map(corpus, stripWhitespace)
# Convertir el Corpus a una matriz de términos de documentos (DTM)
dtm <- DocumentTermMatrix(corpus)
# Buscar frases que mencionen estrategias militares
expresion_regular_estrategias <- "([^.!?]*enemigo[^.!?]*)"
frases_estrategias <- str_extract_all(texto_unido, expresion_regular_estrategias)
# Filtrar las frases que mencionen estrategias militares
estrategias_militares <- unlist(frases_estrategias)
# Instalar y cargar la librería 'crayon' si no está instalada
if (!requireNamespace("crayon", quietly = TRUE)) {
install.packages("crayon")
}
library(crayon)
# Obtener el índice de los párrafos que contienen la palabra "estrategia"
indices_estrategias <- grep(expresion_regular_estrategias, texto_unido)
# Imprimir cada párrafo que contiene la palabra "estrategia" resaltada en azul
cat("Párrafos que mencionan 'estrategia':\n")
for (i in seq_along(indices_estrategias)) {
start_index <- indices_estrategias[i]
end_index <- ifelse(i < length(indices_estrategias), indices_estrategias[i + 1] - 1, length(texto_unido))
parrafo <- paste(texto_unido[start_index:end_index], collapse=" ")
# Resaltar la palabra "estrategia" en azul
parrafo_resaltado <- gsub("conocer", crayon::blue("conocer"), parrafo, ignore.case = TRUE)
cat(i, ". ", parrafo_resaltado, "\n\n")
}
# Buscar frases que mencionen estrategias militares
expresion_regular_estrategias <- "([^.!?]*conocer[^.!?]*)"
frases_estrategias <- str_extract_all(texto_unido, expresion_regular_estrategias)
library(tm)
library(stringr)
#Mirar cual es el folder de trabajo actual y asegurarse que en el est? el documento de la obra
getwd()
#Lee el texto desde el archivo "El Arte De La Guerra Sun Tzu.txt" y lo coloca en un vector
text.v <- scan("El Arte De La Guerra Sun Tzu.txt", what="character", sep="\n")
# Guarda lal?nea del texto en donde inicia la obra en start.v
start.v <- which(text.v == "/CAPITULO I")
start.v
# Guarda la linea del texto en donde finaliza la obra en start.v
end.v <- which(text.v == "FIN")
end.v
start.metadata.v <- text.v[1:start.v -1]
start.metadata.v
# El metadato del final de la obra inicia en la l?nea (end.v+1) y finaliza en la ?ltima de la obra
end.metadata.v <- text.v[(end.v+1):length(text.v)]
end.metadata.v
# Colocamos todo el metadato de la obra en la variable (metadata.v)
metadata.v <- c(start.metadata.v, end.metadata.v)
metadata.v
# Ahora, las lineas de la novela son las que se encuentra entre la l?nea de inicio (start.v) y la de fin de la obra (end.v)
# Colocaremos est?s l?neas en la variable (novel.lines.v)
novel.lines.v <-  text.v[start.v:end.v]
novel.lines.v
class(novel.lines.v)
texto_unido <- novel.lines.v
#texto_unido <- gsub("[[:punct:]]", " ", texto_unido)
# Convertir todas las palabras a minúsculas
texto_unido <- tolower(texto_unido)
# Eliminar puntuación y caracteres especiales
texto_unido <- gsub("[[:punct:]]", " ", texto_unido)
# Crear un Corpus de texto
corpus <- Corpus(VectorSource(texto_unido))
# Preprocesamiento del texto
corpus <- tm_map(corpus, removeNumbers)
corpus <- tm_map(corpus, removeWords, stopwords("spanish"))  # Puedes cambiar "spanish" al idioma adecuado
corpus <- tm_map(corpus, stripWhitespace)
# Convertir el Corpus a una matriz de términos de documentos (DTM)
dtm <- DocumentTermMatrix(corpus)
# Buscar frases que mencionen estrategias militares
expresion_regular_estrategias <- "([^.!?]*conocer[^.!?]*)"
frases_estrategias <- str_extract_all(texto_unido, expresion_regular_estrategias)
# Filtrar las frases que mencionen estrategias militares
estrategias_militares <- unlist(frases_estrategias)
# Instalar y cargar la librería 'crayon' si no está instalada
if (!requireNamespace("crayon", quietly = TRUE)) {
install.packages("crayon")
}
library(crayon)
# Obtener el índice de los párrafos que contienen la palabra "estrategia"
indices_estrategias <- grep(expresion_regular_estrategias, texto_unido)
# Imprimir cada párrafo que contiene la palabra "estrategia" resaltada en azul
cat("Párrafos que mencionan 'estrategia':\n")
for (i in seq_along(indices_estrategias)) {
start_index <- indices_estrategias[i]
end_index <- ifelse(i < length(indices_estrategias), indices_estrategias[i + 1] - 1, length(texto_unido))
parrafo <- paste(texto_unido[start_index:end_index], collapse=" ")
# Resaltar la palabra "estrategia" en azul
parrafo_resaltado <- gsub("conocer", crayon::blue("conocer"), parrafo, ignore.case = TRUE)
cat(i, ". ", parrafo_resaltado, "\n\n")
}
